version: '3.8'

services:
  api_gateway:
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NEWS_SERVICE_URL=http://news_service:8080
      - COMMENTS_SERVICE_URL=http://comments_service:8081
      - CENSORSHIP_SERVICE_URL=http://censorship_service:8083
      - LOG_LEVEL=info
    volumes:
      - ./logs/api_gateway:/var/log/api_gateway
    depends_on:
      news_service:
        condition: service_healthy
      comments_service:
        condition: service_healthy
      censorship_service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  news_service:
    build: ./news_service
    # ports:
    #   - "8080:8080"
    environment:
      - DATABASE_URL=postgres://news_user:news_password@postgres:5432/news_db?sslmode=disable
      - LOG_LEVEL=info
    volumes:
      - ./logs/news_service:/var/log/news_service
      - ./config.json:/app/config.json:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/health"]
      interval: 5s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  comments_service:
    build:
      context: ./comments_service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=comments_user
      - DB_PASSWORD=comments_password
      - DB_NAME=comments_db
      - LOG_LEVEL=info
    volumes:
      - ./logs/comments_service:/var/log/comments_service
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  censorship_service:
    build:
      context: ./censorship_service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - LOG_LEVEL=info
    volumes:
      - ./logs/censorship_service:/var/log/censorship_service
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=news_db,comments_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./logs/postgres:/var/log/postgresql
    command: ["postgres", "-c", "max_connections=1000"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 256M

volumes:
  postgres_data:
